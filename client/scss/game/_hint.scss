@use '../colors';

$color-thought : colors.$main-color-dark;
$color-lost : #a77822;
$color-wrong : #c44343;

.level-hint-container {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    max-width: 35rem;

    display: flex;

    pointer-events: none;
    user-select: none;
}

.level-hint-character {
    height: min(25vw, 25vh);
    width: min(25vw, 25vh);
    max-width: 10rem;
    max-height: 10rem;
    margin: 1rem 0 1rem 1rem;

    transform: translateX(0);
    transition: transform .6s ease-out;

    &>img {
        width: inherit;
        height: inherit;
        max-width: 10rem;
        max-height: 10rem;
        image-rendering: pixelated;
    }

    &.hidden {
        transform: translateX(calc(-100% - 2rem));
        transition: transform .6s ease-in;
    }
}

.level-hint-bubble {
    position: relative;

    display: flex;
    text-align: center;
    justify-content: center;
    align-items: center;

    background-color: $color-thought;
    color: colors.$main-color-light;
    border-radius: .4rem;

    margin: auto 2rem auto 1rem;
    padding: .6rem .8rem;

    transform: scale(0);
    opacity: 0;
    transition: transform .2s cubic-bezier(0.36, 0, 0.66, -0.56), background .2s linear, opacity .2s ease-in;

    &.pop {
        transform: scale(1);
        opacity: 1;
        transition: transform .2s cubic-bezier(0.34, 1.56, 0.64, 1), background .2s linear, opacity .2s ease-out;
    }

    &.focus {
        transition: transform .1s ease-out, background .2s linear, opacity .2s ease-out;
        transform: scale(1.1);
    }

    &::before {
        content: '';
        position: absolute;
        top: calc(50% - .3rem);
        left: -1rem;
        height: 1rem;
        width: 1.1rem;
        clip-path: polygon(0 50%, 100% 100%, 100% 0);
        background-color: $color-thought;
        transition: background .2s linear;
    }

    &.lost {
        background-color: $color-lost;

        &::before {
            background-color: $color-lost;
        }
    }

    &.wrong {
        background-color: colors.$score-enemies-dark;

        &::before {
            background-color: colors.$score-enemies-dark;
        }
    }

    // &.lost,
    // &.wrong {
    //     transform: scale(0);
    //     transition: transform .2s cubic-bezier(0.36, 0, 0.66, -0.56);

    //     &.pop {
    //         transform: scale(1);
    //         transition: transform .2s cubic-bezier(0.34, 1.56, 0.64, 1);
    //     }
    // }


}

.level-hint-vector {
    position: absolute;
    z-index: 5;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;

    &>svg {
        stroke-width: 0;
        stroke: colors.$main-color-light;
        fill: colors.$main-color-dark;
        height: inherit;
        width: inherit;
    }
}

.level-hint-text {
    position: absolute;
    z-index: 10;
    top: 0;
    left: 0;
    width: calc(100% - 3rem);
    height: calc(100% - 3rem);

    display: flex;
    justify-content: center;
    align-items: center;

    text-align: center;
    font-family: 'Vincendo';
    font-size: .9rem;
    color: colors.$main-color-light;
    padding: 1.5rem;
}
@use '../colors';

@property --angle {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
}

.levels-panel-container {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    overflow: hidden;
    transition:
        transform .3s cubic-bezier(0.65, 0, 0.35, 1),
        opacity .3s ease-in;

    &.previous {
        opacity: 0;
        transform: translateX(-100%);
    }

    &.current {
        transform: translateX(0%);
        opacity: 1;
    }

    &.next {
        opacity: 0;
        transform: translateX(100%);
    }
}

.levels-navigation-container {
    margin-top: auto;
    margin-bottom: 2rem;
    width: calc(100% - 4rem);
    max-width: 25rem;

    display: flex;

    &.pop>.levels-navigation-entry {
        transform: scale(1);
        transition:
            transform .3s cubic-bezier(0.34, 1.56, 0.64, 1),
            flex .3s ease-out,
            margin .3s ease-out;
    }
}

.levels-navigation-entry {
    height: 2.5rem;

    border-radius: .4rem;
    pointer-events: all;
    overflow: hidden;

    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 3rem;

    font-family: 'Vincendo';
    font-size: 1.2rem;
    white-space: nowrap;

    background-color: colors.$main-color-dark;
    color: colors.$main-color-light;

    transform: scale(0);
    transition:
        transform .3s cubic-bezier(0.36, 0, 0.66, -0.56),
        flex .3s ease-out,
        margin .3s ease-out;

    &>svg {
        margin: 0 .3rem;
        width: 2.5rem;
        height: 2.5rem;
    }

    &.previous {
        flex: 0 0 2.5rem;
        margin-right: 1rem;
    }

    &.current {
        flex: 1;
    }

    &.next {
        flex: 0 0 2.5rem;
        margin-left: 1rem;
    }

    &.shrink {
        flex: 0;
        margin: 0;
    }
}

.levels-minimap-container {
    pointer-events: all;
    position: absolute;
    z-index: 50;
    transform-origin: center center;
    transform: translate(-50%, -50%) scale(0);

    opacity: 1;
    transition: transform .3s cubic-bezier(0.36, 0, 0.66, -0.56);

    &.active>.levels-minimap {
        width: 4rem;
        height: 4rem;

        border: solid .4rem #0000;
        background: conic-gradient(from var(--angle),
                colors.$main-color-medium,
                colors.$main-color-dark,
                colors.$main-color-dark,
                colors.$main-color-medium,
                colors.$main-color-dark,
                colors.$main-color-dark,
                colors.$main-color-medium ) border-box;

        animation:
            6s border-rotation linear infinite,
            3s scale-breathing ease-in-out infinite .3s;
    }

    &.remaining {
        opacity: .7;

        &>.levels-minimap>.levels-state {
            opacity: 1;
        }
    }

    &.finished {
        &>.levels-minimap>.levels-state {
            opacity: 0.8;
        }
    }

    &.pop {
        transform: translate(-50%, -50%) scale(1);
        transition: transform .3s cubic-bezier(0.34, 1.56, 0.64, 1);
    }
}

.levels-minimap {
    position: relative;
    width: 3rem;
    height: 3rem;
    overflow: hidden;

    border: solid .4rem colors.$main-color-dark;
    border-radius: 3.5rem;
    box-shadow: 0 0 1rem grey;
}

.levels-state {
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;

    width: inherit;
    height: inherit;
    background-color: colors.$main-color-light;

    opacity: 0;
    transition: opacity .2s linear;

    &>svg {
        color: colors.$main-color-dark;
        width: inherit;
        height: inherit;
    }
}

.levels-svg {
    position: absolute;
    z-index: 10;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;

    &>svg {
        display: block;
        height: 100%;
        width: 100%;

        &>line {
            stroke: colors.$main-color-dark;
            stroke-width: .5rem;
            transition: stroke-width .2s cubic-bezier(0.36, 0, 0.66, -0.56);

            &.appear {
                stroke-dashoffset: 0;
            }

            &.reveal {
                animation: line-reveal .3s ease-out forwards;
            }

            &.thinout {
                stroke-width: 0;
            }
        }
    }
}

.levels-experience-container {
    height: 30vh;
    max-height: 15rem;
    width: 50vw;
    max-width: 15rem;
    border-radius: 1rem;

    background-color: colors.$main-color-light;

    transform: scale(0);
    transition: transform .3s cubic-bezier(0.36, 0, 0.66, -0.56);

    &.pop {
        transform: scale(1);
        transition: transform .3s cubic-bezier(0.34, 1.56, 0.64, 1);
    }
}